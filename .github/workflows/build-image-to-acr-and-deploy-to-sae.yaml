name: "Build Docker Image To ACR And Deploy To SAE"

# 指定触发分支，push：代码提交时触发，pull_request：pr 提交时触发
on:
  push:
    branches:
      - staging
  pull_request:
    branches:
      - development
      - preview
      - main

jobs:
  build:
    # 运行机器，如果不是自定义的机器，会随机使用一台 Github 自有的机器运行
    runs-on: ubuntu-latest
    # 根据触发分支选择各自的环境变量
    # base_ref：pr 特有，表示目标分支
    # ref_name：push 时有效，标识提交分支
    environment: "${{ github.base_ref || github.ref_name }}-env"
    # 环境变量，有效范围取决于所在层级，在 root 层级为全局变量
    env:
      # 本次编译的镜像 tag
      IMAGE_TAG: ${{ github.sha }}
      IMAGE_URL: ${{ secrets.ACR_REGISTRY }}/${{ secrets.ACR_NAMESPACE }}/${{ secrets.ACR_REPOSITORY }}
    steps:
      # 记录开始时间
      - name: Record start time
        run: echo "START_TIME=$(date +%s)" >> $GITHUB_ENV

      # 拉取最新代码
      - uses: actions/checkout@v4

      # 初始化 Docker 工具
      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v3.6.1
        with:
          driver: docker-container  # 使用 docker-container 驱动
          install: true

      # 登录 ACR
      - name: Login to ACR
        uses: aliyun/acr-login@v1
        with:
          login-server: "https://${{ secrets.ACR_REGISTRY }}"
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
          region-id: ${{ secrets.ALICLOUD_REGION_ID }}

      # 编译并提交镜像到ACR
      - name: Build and Push Docker Image
        run: docker buildx build --platform linux/amd64 -t $IMAGE_URL:$IMAGE_TAG -f ./Dockerfile --push .

      # 使用编译的镜像触发 SAE 部署
      - name: Deploy to SAE
        uses: taotaro/actions-toolkit@deploy-to-sae
        with:
          access-key-id: ${{ secrets.ALICLOUD_ACCESS_KEY_ID }}
          access-key-secret: ${{ secrets.ALICLOUD_ACCESS_KEY_SECRET }}
          region-id: ${{ secrets.ALICLOUD_REGION_ID }}
          sae-app-id: ${{ secrets.SAE_APP_ID }}
          acr-instance-id: ${{ secrets.ACR_INSTANCE_ID }}
          acr-image-url: '${{ env.IMAGE_URL }}:${{ env.IMAGE_TAG }}'

      # 登出 ACR
      - name: Log out from ACR
        run: docker logout $ACR_REGISTRY

      # 记录结束时间
      - name: Record end time
        run: echo "END_TIME=$(date +%s)" >> $GITHUB_ENV

      # 发送运行结果到 Lark
      - name: Send Notification To Lark
        if: ${{ always() }}
        uses: taotaro/actions-toolkit@send-action-notification-to-lark
        with:
          webhook: ${{ secrets.LARK_BOT_WEBHOOK }}
          icon: ${{ vars.LARK_NOTIFICATION_ICON }}
          title: 'Github Actions Automatic Deployment Job Build Result'
          trigger: ${{ github.actor }}
          start-time: ${{ env.START_TIME }}
          end-time: ${{ env.END_TIME }}
          repository: '${{ github.repository }}'
          run-id: ${{ github.run_id }}
          environment: ${{ vars.ENVIRONMENT }}
          status: ${{ job.status }}
          alert-members: ${{ vars.LARK_NOTIFICATION_ALERT_MEMBERS }}
